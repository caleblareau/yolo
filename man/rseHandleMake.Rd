% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constructor.R
\docType{methods}
\name{rseHandleMake}
\alias{rseHandleMake}
\alias{rseHandleMake,ANY,ANY,character-method}
\title{Create a \code{rseHandle} object}
\usage{
rseHandleMake(rowData, colData, lookupFileName, lookupTableName = "data",
  lookupFileType = "sqlite", lookupFileFormat = "sparse")

\S4method{rseHandleMake}{ANY,ANY,character}(rowData, colData, lookupFileName,
  lookupTableName = "data", lookupFileType = "sqlite",
  lookupFileFormat = "sparse")
}
\arguments{
\item{rowData}{A \code{GRanges} object or something that can be coerced into one.
Type checking is performed in the call to \code{RangedSummarizedExperiment}}

\item{colData}{A data frame of per-sample annotations}

\item{lookupFileName}{String pointing to the file backend}

\item{lookupTableName}{= "data" Name of data table in file backend}

\item{lookupFileType}{= "sparse" can also be "normal". The type of matrix
contained in the file/table.}

\item{lookupFileFormat}{= "sqlite" can also be "HDF5". The format of the
file providing the data backend of this constructed object.}
}
\value{
Returns a \code{sqlSparseHandle} object.
}
\description{
\code{rseHandleMake} takes the a minimum of three parameters specified below
and creates a \code{rseHandle} object which can be subset and
manipulated without reading any data off the disk. At a minimum,
the rowData, colData, and backend file are needed. By default, we
assume that the file format will be an sqlite file and the format
will be sparse, but these can be differentially specified to an 
HDF5 file
}
\details{
A series of QC measures will be called when running this function. 
First, the rowData input must be a \code{GRanges} object.
The length of the rowData input after coercion must be equal to the maximum
index of the row in the particular file/table.

Next, the colData length must be equal to the maximum index of the column
in the linked file/table.

These maximums will be pulled on constuction, which ensures that the table
name, by default is 'data' exists in the sql file.

The sparse format demands that there are three columns
in the file/table being referenced; two of which contain
'row' and 'column' as labels that indicate the index of 
the row and column elements.

The normal format demands that there are n columns in the
file/table being referenced where n is the numerb of samples
and the columns are named
}
\examples{
library(GenomicRanges)
nm <- c("chr", "start", "stop")
rt <- read.table(system.file("extdata", "dat1_row.bed", package="yolo"))
rowData <- GRanges(setNames(rt, nm))
colData <- read.table(system.file("extdata", "dat1_col.txt", package="yolo"))
sqlf <- system.file("extdata", "dat1.sqlite", package="yolo")
d1 <- rseHandleMake(rowData, colData, lookupFileName=sqlf)

}

